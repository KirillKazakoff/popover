{"version":3,"file":"bundle.js","mappings":"m+BAQe,SAASA,EAAOC,GAC3B,IAAKA,EAAM,MAAO,GAElB,GAAoB,iBAATA,EACP,OAAOA,EAGX,GAAIC,MAAMC,QAAQF,GAAO,CACrB,IAAIG,EAAW,GAOf,OALAH,EAAKI,SAAQ,SAACC,GACV,IAAMC,EAAcP,EAAOM,GAC3BF,GAAYG,KAGTH,EAGX,IAAQI,EAA+BP,EAA/BO,MAAOC,EAAwBR,EAAxBQ,IAAKC,EAAmBT,EAAnBS,QAASC,EAAUV,EAAVU,MACzBC,EAAY,GACZC,EAAU,GAed,OAbIF,GACAG,OAAOC,QAAQJ,GAAON,SAAQ,YAAkB,aAAhBW,EAAgB,KAAXC,EAAW,KAC5CL,GAAa,GAAJ,OAAOI,EAAP,aAAeC,EAAf,QAIbR,IACAI,EAAU,UAAH,OAAaJ,EAAb,MApCf,SAAsBD,EAAOC,EAAKC,EAASC,GACvC,MAAc,UAAVH,GAA+B,QAAVA,EACrB,WAAWA,EAAX,YAAoBG,GAApB,OAA4BF,EAA5B,KAEJ,WAAWD,EAAX,YAAoBG,GAApB,OAA4BF,EAA5B,YAAmCC,EAAnC,aAA+CF,EAA/C,KAoCoBU,CAAaV,EAAOK,EADpBb,EAAOU,GACmCE,GCzClE,IAAMO,EAAiB,SAACC,GAAD,MAAU,CAC7BZ,MAAO,MACPC,IAAK,mBACLC,QAAS,GAAF,OAAKU,KAGVC,EAAe,SAACC,GAAD,MAAY,CAC7Bd,MAAO,MACPC,IAAK,iBACLC,QAAS,GAAF,OAAKY,KAShB,QANgB,SAACA,EAAOF,GAAR,MAAiB,CAC7BZ,MAAO,MACPC,IAAK,UACLC,QAAS,CAACW,EAAaC,GAAQH,EAAeC,M,0KCX7BG,EAAAA,WACjB,WAAYD,EAAOF,I,4FAAK,SACpB,IAAMI,EAAOxB,EAAOyB,EAAQH,EAAOF,IACnCM,SAASC,KAAKC,mBAAmB,YAAaJ,GAC9CK,KAAK5B,KAAOyB,SAASC,KAAKG,cAAc,Y,oDAG5C,SAAcC,GACVF,KAAK5B,KAAK+B,UAAUC,OAAO,mBAC3B,IAAMC,EAAaL,KAAK5B,KAAKkC,wBAEvBC,EAAeL,EAAOI,wBACtBE,EAAYD,EAAaE,MAAQF,EAAaG,MAAQL,EAAWK,OAAS,EAEhFV,KAAK5B,KAAKuC,MAAMF,KAAhB,UAA0BD,EAA1B,MACAR,KAAK5B,KAAKuC,MAAMC,IAAhB,UAAyBL,EAAaK,IAAMP,EAAWQ,OAAS,GAAhE,W,6BAfanB,GCDF,ICCf,aAAc,Y,4FAAA,SACV,IAAMoB,EAASjB,SAASI,cAAc,oBACtCD,KAAKJ,QAAU,IAAIF,EAAQ,iBALnB,yDAK8CoB,GAEtDA,EAAOC,iBAAiB,SAAS,WAC7B,EAAKnB,QAAQoB,cAAcF,Q","sources":["webpack://yarn-cd/./src/app/lib/engine/engine.js","webpack://yarn-cd/./src/app/components/popover/popover.tmp.js","webpack://yarn-cd/./src/app/components/popover/popover.js","webpack://yarn-cd/./src/app/app.js","webpack://yarn-cd/./src/app/controller/controller.js"],"sourcesContent":["/* eslint-disable object-curly-newline */\nfunction generateHtml(block, cls, content, attrs) {\n    if (block === 'input' || block === 'img') {\n        return `<${block} ${attrs}${cls}>`;\n    }\n    return `<${block} ${attrs}${cls}>${content}</${block}>`;\n}\n\nexport default function engine(node) {\n    if (!node) return '';\n\n    if (typeof node === 'string') {\n        return node;\n    }\n\n    if (Array.isArray(node)) {\n        let fragment = '';\n\n        node.forEach((b) => {\n            const htmlElement = engine(b);\n            fragment += htmlElement;\n        });\n\n        return fragment;\n    }\n\n    const { block, cls, content, attrs } = node;\n    let htmlAttrs = '';\n    let htmlCls = '';\n\n    if (attrs) {\n        Object.entries(attrs).forEach(([key, value]) => {\n            htmlAttrs += `${key}=\"${value}\"`;\n        });\n    }\n\n    if (cls) {\n        htmlCls = `class=\"${cls}\"`;\n    }\n\n    const htmlContent = engine(content);\n    const htmlElement = generateHtml(block, htmlCls, htmlContent, htmlAttrs);\n\n    return htmlElement;\n}\n","const popoverMessage = (msg) => ({\n    block: 'div',\n    cls: 'popover__message',\n    content: `${msg}`,\n})\n\nconst popoverTitle = (title) => ({\n    block: 'div',\n    cls: 'popover__title',\n    content: `${title}`,\n})\n\nconst popover = (title, msg) => ({\n    block: 'div',\n    cls: 'popover',\n    content: [popoverTitle(title), popoverMessage(msg)],\n})\n\nexport default popover;","import './popover.css';\nimport engine from '../../lib/engine/engine';\nimport popover from './popover.tmp';\n\nexport default class Popover {\n    constructor(title, msg) {\n        const html = engine(popover(title, msg));\n        document.body.insertAdjacentHTML('beforeend', html);\n        this.node = document.body.querySelector('.popover');\n    }\n\n    togglePopover(target) {\n        this.node.classList.toggle('popover__active');\n        const nodeCoords = this.node.getBoundingClientRect();\n\n        const targetCoords = target.getBoundingClientRect();\n        const nodeWidth = targetCoords.left + (targetCoords.width - nodeCoords.width) / 2;\n        \n        this.node.style.left = `${nodeWidth}px`;\n        this.node.style.top = `${targetCoords.top - nodeCoords.height - 10}px`;\n    }\n}","import '../css/defaultStyle.css';\nimport Controller from './controller/controller';\n\nconst controller = new Controller();\n","import Popover from '../components/popover/popover';\nconst message = 'holla bruh holla bruh holla bruh holla bruh holla bruh';\n\nexport default class Controller {\n    constructor() {\n        const button = document.querySelector('.popover__button');\n        this.popover = new Popover('Bruh Greetings', message, button);\n\n        button.addEventListener('click', () => {\n            this.popover.togglePopover(button);\n        })\n    }\n}\n"],"names":["engine","node","Array","isArray","fragment","forEach","b","htmlElement","block","cls","content","attrs","htmlAttrs","htmlCls","Object","entries","key","value","generateHtml","popoverMessage","msg","popoverTitle","title","Popover","html","popover","document","body","insertAdjacentHTML","this","querySelector","target","classList","toggle","nodeCoords","getBoundingClientRect","targetCoords","nodeWidth","left","width","style","top","height","button","addEventListener","togglePopover"],"sourceRoot":""}